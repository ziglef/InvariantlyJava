/* Generated By:JavaCC: Do not edit this line. ASTParserTokenManager.java */
/*
 * Copyright (C) 2008 Júlio Vilmar Gesser.
 * 
 * This file is part of Java 1.5 parser and Abstract Syntax Tree.
 *
 * Java 1.5 parser and Abstract Syntax Tree is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Java 1.5 parser and Abstract Syntax Tree is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Java 1.5 parser and Abstract Syntax Tree.  If not, see <http://www.gnu.org/licenses/>.
 */
package japa.parser;
import invariants.InvalidTypeException;
import invariants.Invariant;
import invariants.Invariants;
import java.io.*;
import java.util.*;
import japa.parser.ast.*;
import japa.parser.ast.body.*;
import japa.parser.ast.expr.*;
import japa.parser.ast.stmt.*;
import japa.parser.ast.type.*;

/** Token Manager. */
public class ASTParserTokenManager implements ASTParserConstants
{
    private List<Comment> comments;
    private final Stack<JavadocComment> javadocStack = new Stack<JavadocComment>();
    private JavadocComment lastJavadoc;

    void pushJavadoc() {
        javadocStack.push(lastJavadoc);
    }

    JavadocComment popJavadoc() {
        return javadocStack.pop();
    }

    List<Comment> getComments() {
        return comments;
    }

    void clearComments() {
        comments = null;
        javadocStack.clear();
        lastJavadoc = null;
    }

    private void CommonTokenAction(Token token){
        lastJavadoc = null;
        if (token.specialToken != null) {
                if(comments == null) {
                    comments = new LinkedList<Comment>();
                }
            Token special = token.specialToken;
            if(special.kind == JAVA_DOC_COMMENT) {
                lastJavadoc = new JavadocComment(special.beginLine, special.beginColumn, special.endLine, special.endColumn, special.image.substring(3, special.image.length()-2));
                comments.add(lastJavadoc);
            } else if(special.kind == INVD) {
                                // When the parser finds an invariant
                                // Gets / Sets current Invariants instance
                        Invariants invs = Invariants.getInstance();
                        // Gets the letter that refers which type of invariant it is
                        String type = special.image.substring(14, 15);
                        String varName = special.image.substring(16, special.image.indexOf(" ", 16));
                        // System.out.println(varName);
                                Invariant inv;

                                int operSIndex, operEIndex;
                                int lbIndex, rbIndex;
                                String oper;
                                int operSize;
                                String value;
                                Invariant.invType operType = Invariant.invType.EQUAL;;
                                String elements;

                                switch(type.charAt(0))
                                {
                                        case 'F':
                                                // gets the index of the space before the operator
                                                operSIndex = special.image.indexOf(" ", 16);
                                                // gets the index of the space after the operator
                                                operEIndex = special.image.indexOf(" ", operSIndex+1);
                                                // gets the operator
                                                oper = special.image.substring(operSIndex+1, operEIndex);
                                                operSize = oper.length();
                                                //System.out.println("Oper: "+oper);

                                                switch(oper.charAt(0))
                                                {
                                                        case '<': if(operSize > 1) operType = Invariant.invType.LESSERE; else operType = Invariant.invType.LESSER; break;
                                                        case '=': operType = Invariant.invType.EQUAL; break;
                                                        case '>': if(operSize > 1) operType = Invariant.invType.GREATERE; else operType = Invariant.invType.GREATER; break;
                                                        case '!': operType = Invariant.invType.NOTEQUAL; break;

                                                        default:
                                                                try{
                                                                  throw new InvalidTypeException();
                                                                }catch(InvalidTypeException e){
                                                                  e.printStackTrace();
                                                                }
                                                                System.exit(-1);
                                                }

                                                value = special.image.substring(operEIndex+1);
                                                //System.out.println("value: "+value);
                                                Float valuef = Float.parseFloat(value);

                                                inv = new Invariant<Float>(operType, "Float", valuef);
                                                invs.addInvariant(varName, inv);
                                                break;
                                        case 'I':
                                                // gets the index of the space before the operator
                                                operSIndex = special.image.indexOf(" ", 16);
                                                // gets the index of the space after the operator
                                                operEIndex = special.image.indexOf(" ", operSIndex+1);
                                                // gets the operator
                                                oper = special.image.substring(operSIndex+1, operEIndex);
                                                operSize = oper.length();
                                                //System.out.println("Oper: "+oper);

                                                switch(oper.charAt(0))
                                                {
                                                        case '<': if(operSize > 1) operType = Invariant.invType.LESSERE; else operType = Invariant.invType.LESSER; break;
                                                        case '=': operType = Invariant.invType.EQUAL; break;
                                                        case '>': if(operSize > 1) operType = Invariant.invType.GREATERE; else operType = Invariant.invType.GREATER; break;
                                                        case '!': operType = Invariant.invType.NOTEQUAL; break;

                                                        default:
                                                                try{
                                                                  throw new InvalidTypeException();
                                                                }catch(InvalidTypeException e){
                                                                  e.printStackTrace();
                                                                }
                                                                System.exit(-1);
                                                }

                                                value = special.image.substring(operEIndex+1);
                                                //System.out.println("value: "+value);
                                                value = value.substring(0, value.length()-1) + '\u005c0';
                                                Integer valuei = Integer.parseInt(value.trim());

                                                inv = new Invariant<Integer>(operType, "Integer", valuei);
                                                invs.addInvariant(varName, inv);
                                                break;


                                case 'C':
                            // gets the index of the space before the operator
                            operSIndex = special.image.indexOf(" ", 16);
                            // gets the index of the space after the operator
                            operEIndex = special.image.indexOf(" ", operSIndex+1);
                            // gets the operator
                            oper = special.image.substring(operSIndex+1, operEIndex);
                            // gets the index of the left bracket
                            lbIndex = special.image.indexOf("[", 16);
                            // gets the index of the right bracket
                        rbIndex = special.image.indexOf("]", 19);


                        elements = special.image.substring(lbIndex+1, rbIndex-1);

                        switch(oper.charAt(0))
                        {
                                case '!': operType = Invariant.invType.NOTEQUAL; break;
                                case '=': operType = Invariant.invType.EQUAL; break;

                                default:
                                        try{
                                        throw new InvalidTypeException();
                                }catch(InvalidTypeException e){
                                                e.printStackTrace();
                                }
                                System.exit(-1);
                        }

                        ArrayList<Character> characters = new ArrayList<Character>();

                        for(int i = 0; i<elements.length(); i++){
                                if(elements.charAt(i) != ',' && elements.charAt(i) != '\u005c'') characters.add(elements.charAt(i));
                        }

                        inv = new Invariant<Character>(operType,"Character", characters);
                                invs.addInvariant(varName, inv);

                                break;

                                        default:
                                                try{
                                                  throw new InvalidTypeException();
                                                }catch(InvalidTypeException e){
                                                  e.printStackTrace();
                                                }
                                                System.exit(-1);
                                }

                } else if(special.kind == SINGLE_LINE_COMMENT) {
                LineComment comment = new LineComment(special.beginLine, special.beginColumn, special.endLine, special.endColumn, special.image.substring(2));
                comments.add(comment);
            } else if(special.kind == MULTI_LINE_COMMENT) {
                BlockComment comment = new BlockComment(special.beginLine, special.beginColumn, special.endLine, special.endColumn, special.image.substring(2, special.image.length()-2));
                comments.add(comment);
            }
        }
    }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0xee01000608000000L) != 0L)
            return 981;
         if ((active1 & 0x810000000L) != 0L)
            return 883;
         if ((active1 & 0x104000000L) != 0L)
            return 846;
         if ((active1 & 0x1000000001000000L) != 0L)
            return 982;
         if ((active0 & 0x100L) != 0L || (active1 & 0x10080000000000L) != 0L)
            return 259;
         if ((active0 & 0xfffffffffffff000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 77;
            return 983;
         }
         return -1;
      case 1:
         if ((active1 & 0x600000000L) != 0L)
            return 984;
         if ((active0 & 0x100L) != 0L)
            return 265;
         if ((active0 & 0x803000000L) != 0L)
            return 983;
         if ((active0 & 0xfffffff7fcfff000L) != 0L || (active1 & 0x1L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 77;
               jjmatchedPos = 1;
            }
            return 983;
         }
         if ((active1 & 0x800000000L) != 0L)
            return 884;
         if ((active1 & 0x100000000L) != 0L)
            return 847;
         return -1;
      case 2:
         if ((active0 & 0x2000098200000000L) != 0L)
            return 983;
         if ((active0 & 0xdffff675fefff000L) != 0L || (active1 & 0x1L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 77;
               jjmatchedPos = 2;
            }
            return 983;
         }
         return -1;
      case 3:
         if ((active0 & 0x8effe571f2f4f000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 3;
            return 983;
         }
         if ((active0 & 0x510012040c0b0000L) != 0L)
            return 983;
         return -1;
      case 4:
         if ((active0 & 0x88dbe57012c07000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 77;
               jjmatchedPos = 4;
            }
            return 983;
         }
         if ((active0 & 0x6240001e0348000L) != 0L || (active1 & 0x1L) != 0L)
            return 983;
         return -1;
      case 5:
         if ((active0 & 0x8890e15090c05000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 5;
            return 983;
         }
         if ((active0 & 0x44b042002002000L) != 0L)
            return 983;
         return -1;
      case 6:
         if ((active0 & 0x8890815000401000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 6;
            return 983;
         }
         if ((active0 & 0x600090804000L) != 0L)
            return 983;
         return -1;
      case 7:
         if ((active0 & 0x880815000000000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 7;
            return 983;
         }
         if ((active0 & 0x8010000000401000L) != 0L)
            return 983;
         return -1;
      case 8:
         if ((active0 & 0x80005000000000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 8;
            return 983;
         }
         if ((active0 & 0x800810000000000L) != 0L)
            return 983;
         return -1;
      case 9:
         if ((active0 & 0x5000000000L) != 0L)
            return 983;
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 9;
            return 983;
         }
         return -1;
      case 10:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 10;
            return 983;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 26:
         return jjStopAtPos(0, 139);
      case 33:
         jjmatchedKind = 92;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000000L);
      case 37:
         jjmatchedKind = 111;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000000000000L);
      case 38:
         jjmatchedKind = 108;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20002000000000L);
      case 40:
         return jjStopAtPos(0, 80);
      case 41:
         return jjStopAtPos(0, 81);
      case 42:
         jjmatchedKind = 106;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000000000000L);
      case 43:
         jjmatchedKind = 104;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2004000000000L);
      case 44:
         return jjStopAtPos(0, 87);
      case 45:
         jjmatchedKind = 105;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4008000000000L);
      case 46:
         jjmatchedKind = 88;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000000000000L);
      case 47:
         jjmatchedKind = 107;
         return jjMoveStringLiteralDfa1_0(0x100L, 0x10000000000000L);
      case 58:
         return jjStopAtPos(0, 95);
      case 59:
         return jjStopAtPos(0, 86);
      case 60:
         jjmatchedKind = 91;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x201000200000000L);
      case 61:
         jjmatchedKind = 90;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000000L);
      case 62:
         jjmatchedKind = 127;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x6c00000400000000L);
      case 63:
         return jjStopAtPos(0, 94);
      case 64:
         return jjStopAtPos(0, 89);
      case 91:
         return jjStopAtPos(0, 84);
      case 93:
         return jjStopAtPos(0, 85);
      case 94:
         jjmatchedKind = 110;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000000000000L);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x3000L, 0x0L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x1c000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x7e0000L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x3800000L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x1c000000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x3e0000000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x400000000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x1f800000000L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x1c0000000000L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x1e00000000000L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0xfc000000000000L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x3f00000000000000L, 0x0L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0xc000000000000000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1L);
      case 123:
         return jjStopAtPos(0, 82);
      case 124:
         jjmatchedKind = 109;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40001000000000L);
      case 125:
         return jjStopAtPos(0, 83);
      case 126:
         return jjStopAtPos(0, 93);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active1 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 101);
         break;
      case 42:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(1, 8, 265);
         break;
      case 43:
         if ((active1 & 0x4000000000L) != 0L)
            return jjStopAtPos(1, 102);
         break;
      case 45:
         if ((active1 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 103);
         break;
      case 46:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000000000000000L);
      case 60:
         if ((active1 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 112;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000000000000L);
      case 61:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(1, 96, 847);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(1, 97, 984);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(1, 98, 984);
         else if ((active1 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(1, 99, 884);
         else if ((active1 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 113);
         else if ((active1 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 114);
         else if ((active1 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 115);
         else if ((active1 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 116);
         else if ((active1 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 117);
         else if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(1, 118);
         else if ((active1 & 0x80000000000000L) != 0L)
            return jjStopAtPos(1, 119);
         else if ((active1 & 0x100000000000000L) != 0L)
            return jjStopAtPos(1, 120);
         break;
      case 62:
         if ((active1 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2c00000000000000L);
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x240020060000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x2080000800000L, active1, 0L);
      case 102:
         if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(1, 35, 983);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x704000000080000L, active1, 0x1L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0xc0000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x104100000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x3000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x1c008000000L, active1, 0L);
      case 111:
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 24;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0xc000020602604000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x3800c00000008000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x18000000000000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x21100000000000L, active1, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000L, active1, 0L);
      case 121:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000010000L, active1, 0L);
      case 124:
         if ((active1 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 100);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 46:
         if ((active1 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(2, 124);
         break;
      case 61:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStopAtPos(2, 121);
         else if ((active1 & 0x400000000000000L) != 0L)
            return jjStopAtPos(2, 122);
         break;
      case 62:
         if ((active1 & 0x2000000000000000L) != 0L)
         {
            jjmatchedKind = 125;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000000000000L);
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x808000000180000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L, active1, 0L);
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x4140400000000000L, active1, 0x1L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000100020000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x800200c0600000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x4800100004000L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x20003000000000L, active1, 0L);
      case 114:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(2, 33, 983);
         return jjMoveStringLiteralDfa3_0(active0, 0x610000000000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x4004023000L, active1, 0L);
      case 116:
         if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 39;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x2050410050000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000a000000L, active1, 0L);
      case 119:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 43, 983);
         break;
      case 121:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 61, 983);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 61:
         if ((active1 & 0x800000000000000L) != 0L)
            return jjStopAtPos(3, 123);
         break;
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000001c0808000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000040000L, active1, 0L);
      case 100:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 62, 983);
         break;
      case 101:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(3, 16, 983);
         else if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(3, 17, 983);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(3, 26, 983);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 60, 983);
         return jjMoveStringLiteralDfa4_0(active0, 0x20010010002000L, active1, 0L);
      case 103:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 41, 983);
         break;
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x10040000000000L, active1, 0L);
      case 107:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000L, active1, 0L);
      case 108:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 44, 983);
         return jjMoveStringLiteralDfa4_0(active0, 0x1001000004000L, active1, 0x1L);
      case 109:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 983);
         break;
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);
      case 111:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 983);
         return jjMoveStringLiteralDfa4_0(active0, 0x600002000000000L, active1, 0L);
      case 114:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(3, 19, 983);
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L, active1, 0L);
      case 115:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 56, 983);
         return jjMoveStringLiteralDfa4_0(active0, 0x20300000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x48804000401000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x604000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x50000000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 983);
         else if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(4, 64, 983);
         return jjMoveStringLiteralDfa5_0(active0, 0x801000004000L, active1, 0L);
      case 104:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 18, 983);
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x9000000400000L, active1, 0L);
      case 107:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(4, 15, 983);
         break;
      case 108:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 30;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active0, 0x82000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x10000000L, active1, 0L);
      case 114:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 983);
         return jjMoveStringLiteralDfa5_0(active0, 0x2012000003000L, active1, 0L);
      case 115:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(4, 20, 983);
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(4, 21, 983);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(4, 32, 983);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 50, 983);
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000L, active1, 0L);
      case 119:
         if ((active0 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 57;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x5000L);
      case 99:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 48, 983);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 51, 983);
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000L);
      case 101:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(5, 25, 983);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 42, 983);
         break;
      case 102:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000L);
      case 103:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L);
      case 104:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 54, 983);
         break;
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x8800000000000000L);
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x80800000L);
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000L);
      case 110:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 49, 983);
         return jjMoveStringLiteralDfa6_0(active0, 0x4000400000L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000000000L);
      case 115:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 58, 983);
         break;
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 983);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 37, 983);
         return jjMoveStringLiteralDfa6_0(active0, 0x10400000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x10000000000L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000001000L);
      case 101:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 45, 983);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 46, 983);
         return jjMoveStringLiteralDfa7_0(active0, 0x800001000000000L);
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x10000000000000L);
      case 108:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L);
      case 110:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(6, 14, 983);
         break;
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L);
      case 115:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(6, 28, 983);
         break;
      case 116:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(6, 23, 983);
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000L);
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000L);
      case 121:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 983);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x10000000000L);
      case 101:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(7, 22, 983);
         else if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 63, 983);
         return jjMoveStringLiteralDfa8_0(active0, 0x804000000000L);
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, 0x880001000000000L);
      case 112:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 52, 983);
         break;
      case 116:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(7, 12, 983);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 47, 983);
         break;
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 40, 983);
         break;
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x80000000000000L);
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0x4000000000L);
      case 116:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 59, 983);
         return jjMoveStringLiteralDfa9_0(active0, 0x1000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 102:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 38, 983);
         break;
      case 115:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 36, 983);
         break;
      case 122:
         return jjMoveStringLiteralDfa10_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 55, 983);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec3 = {
   0xfff0000000200002L, 0xffffffffffffdfffL, 0xfffff00f7fffffffL, 0x12000000007fffffL
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x420043c00000000L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec5 = {
   0x7fffffffffffffL, 0xffffffffffff0000L, 0xffffffffffffffffL, 0x401f0003ffc3L
};
static final long[] jjbitVec6 = {
   0x0L, 0x400000000000000L, 0xfffffffbffffd740L, 0xfbfffffffff7fffL
};
static final long[] jjbitVec7 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffffffc03L, 0x33fffffffff7fffL
};
static final long[] jjbitVec8 = {
   0xfffe00000000ffffL, 0xfffffffe027fffffL, 0xffL, 0x707ffffff0000L
};
static final long[] jjbitVec9 = {
   0x7fffffe00000000L, 0xfffec000000007ffL, 0xffffffffffffffffL, 0x9c00c060002fffffL
};
static final long[] jjbitVec10 = {
   0xfffffffd0000L, 0xe000L, 0x2003fffffffffL, 0x0L
};
static final long[] jjbitVec11 = {
   0x23fffffffffffff0L, 0x3ff010000L, 0x23c5fdfffff99fe0L, 0xf0003b0000000L
};
static final long[] jjbitVec12 = {
   0x36dfdfffff987e0L, 0x1c00005e000000L, 0x23edfdfffffbbfe0L, 0x2000300010000L
};
static final long[] jjbitVec13 = {
   0x23edfdfffff99fe0L, 0x20003b0000000L, 0x3bfc718d63dc7e8L, 0x200000000000000L
};
static final long[] jjbitVec14 = {
   0x3effdfffffddfe0L, 0x300000000L, 0x23effdfffffddfe0L, 0x340000000L
};
static final long[] jjbitVec15 = {
   0x3fffdfffffddfe0L, 0x300000000L, 0x2ffbfffffc7fffe0L, 0x7fL
};
static final long[] jjbitVec16 = {
   0x800dfffffffffffeL, 0x7fL, 0x200decaefef02596L, 0x3000005fL
};
static final long[] jjbitVec17 = {
   0x1L, 0x7fffffffeffL, 0xf00L, 0x0L
};
static final long[] jjbitVec18 = {
   0x6fbffffffffL, 0x3f0000L, 0xffffffff00000000L, 0x1ffffffffff003fL
};
static final long[] jjbitVec19 = {
   0xffffffffffffffffL, 0xffffffff83ffffffL, 0xffffff07ffffffffL, 0x3ffffffffffffffL
};
static final long[] jjbitVec20 = {
   0xffffffffffffff7fL, 0xffffffff3d7f3d7fL, 0x7f3d7fffffff3d7fL, 0xffff7fffff7f7f3dL
};
static final long[] jjbitVec21 = {
   0xffffffff7f3d7fffL, 0x7ffff7fL, 0xffffffff00000000L, 0x1fffffffffffffL
};
static final long[] jjbitVec22 = {
   0xffffffffffffffffL, 0x7f9fffffffffffL, 0xffffffff07fffffeL, 0x1c7ffffffffffL
};
static final long[] jjbitVec23 = {
   0x3ffff0003dfffL, 0x1dfff0003ffffL, 0xfffffffffffffL, 0x18800000L
};
static final long[] jjbitVec24 = {
   0xffffffff00000000L, 0xffffffffffffffL, 0x1ffffffffffL, 0x0L
};
static final long[] jjbitVec25 = {
   0x1fffffffL, 0x1f3fffffff0000L, 0x0L, 0x0L
};
static final long[] jjbitVec26 = {
   0xffffffffffffffffL, 0xfffffffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec27 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffff0fffffffL, 0x3ffffffffffffffL
};
static final long[] jjbitVec28 = {
   0xffffffff3f3fffffL, 0x3fffffffaaff3f3fL, 0x5fdfffffffffffffL, 0x1fdc1fff0fcf1fdcL
};
static final long[] jjbitVec29 = {
   0x8000000000000000L, 0x8002000000100001L, 0x3ffff00000000L, 0x0L
};
static final long[] jjbitVec30 = {
   0xe3fbbd503e2ffc84L, 0xffffffff000003e0L, 0xfL, 0x0L
};
static final long[] jjbitVec31 = {
   0x1f3e03fe000000e0L, 0xfffffffffffffffeL, 0xfffffffee07fffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec32 = {
   0xfffe1fffffffffe0L, 0xffffffffffffffffL, 0xffffff00007fffL, 0xffff000000000000L
};
static final long[] jjbitVec33 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x3fffffffffffffL, 0x0L
};
static final long[] jjbitVec34 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x3fffffffffL, 0x0L
};
static final long[] jjbitVec35 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x1fffL, 0x0L
};
static final long[] jjbitVec36 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffL, 0x0L
};
static final long[] jjbitVec37 = {
   0x6L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec38 = {
   0xffff3fffffffffffL, 0x7ffffffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec39 = {
   0x5f7ffdffa0f8007fL, 0xffffffffffffffdbL, 0x3ffffffffffffL, 0xfffffffffff80000L
};
static final long[] jjbitVec40 = {
   0x3fffffffffffffffL, 0xffffffffffff0000L, 0xfffffffffffcffffL, 0x1fff0000000000ffL
};
static final long[] jjbitVec41 = {
   0x18000000000000L, 0xffdf02000000e000L, 0xffffffffffffffffL, 0x1fffffffffffffffL
};
static final long[] jjbitVec42 = {
   0x87fffffe00000010L, 0xffffffe007fffffeL, 0x7fffffffffffffffL, 0x631cfcfcfcL
};
static final long[] jjbitVec43 = {
   0x0L, 0x0L, 0x420243cffffffffL, 0xff7fffffff7fffffL
};
static final long[] jjbitVec44 = {
   0xffffffffffffffffL, 0x400ffffe0ffffffL, 0xfffffffbffffd740L, 0xfbfffffffff7fffL
};
static final long[] jjbitVec45 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffffffc7bL, 0x33fffffffff7fffL
};
static final long[] jjbitVec46 = {
   0xfffe00000000ffffL, 0xfffffffe027fffffL, 0xbbfffffbfffe00ffL, 0x707ffffff0016L
};
static final long[] jjbitVec47 = {
   0x7fffffe003f000fL, 0xffffc3ff01ffffffL, 0xffffffffffffffffL, 0x9ffffdffbfefffffL
};
static final long[] jjbitVec48 = {
   0xffffffffffff8000L, 0xe7ffL, 0x3ffffffffffffL, 0x0L
};
static final long[] jjbitVec49 = {
   0xf3fffffffffffffeL, 0xffcfff1f3fffL, 0xf3c5fdfffff99feeL, 0xfffcfb080399fL
};
static final long[] jjbitVec50 = {
   0xd36dfdfffff987eeL, 0x1fffc05e003987L, 0xf3edfdfffffbbfeeL, 0x2ffcf00013bbfL
};
static final long[] jjbitVec51 = {
   0xf3edfdfffff99feeL, 0x2ffc3b0c0398fL, 0xc3bfc718d63dc7ecL, 0x200ff8000803dc7L
};
static final long[] jjbitVec52 = {
   0xc3effdfffffddfeeL, 0xffc300603ddfL, 0xf3effdfffffddfecL, 0xffc340603ddfL
};
static final long[] jjbitVec53 = {
   0xc3fffdfffffddfecL, 0xffc300803dcfL, 0x2ffbfffffc7fffecL, 0xc0000ff5f847fL
};
static final long[] jjbitVec54 = {
   0x87fffffffffffffeL, 0x3ff7fffL, 0x3bffecaefef02596L, 0x33ff3f5fL
};
static final long[] jjbitVec55 = {
   0xc2a003ff03000001L, 0xfffe07fffffffeffL, 0x1ffffffffeff0fdfL, 0x40L
};
static final long[] jjbitVec56 = {
   0x3c7f6fbffffffffL, 0x3ff03ffL, 0xffffffff00000000L, 0x1ffffffffff003fL
};
static final long[] jjbitVec57 = {
   0xffffffff7f3d7fffL, 0x3fe0007ffff7fL, 0xffffffff00000000L, 0x1fffffffffffffL
};
static final long[] jjbitVec58 = {
   0x1fffff001fdfffL, 0xddfff000fffffL, 0xffffffffffffffffL, 0x3ff388fffffL
};
static final long[] jjbitVec59 = {
   0xffffffff03ff3800L, 0xffffffffffffffL, 0x3ffffffffffL, 0x0L
};
static final long[] jjbitVec60 = {
   0xfff0fff1fffffffL, 0x1f3fffffffffc0L, 0x0L, 0x0L
};
static final long[] jjbitVec61 = {
   0x80007c000000f000L, 0x8002fc0f00100001L, 0x3ffff00000000L, 0x7e21fff0000L
};
static final long[] jjbitVec62 = {
   0x1f3efffe000000e0L, 0xfffffffffffffffeL, 0xfffffffee67fffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec63 = {
   0x10000000000006L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec64 = {
   0x3L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec65 = {
   0x0L, 0x800000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec66 = {
   0x5f7ffdffe0f8007fL, 0xffffffffffffffdbL, 0x3ffffffffffffL, 0xfffffffffff80000L
};
static final long[] jjbitVec67 = {
   0x18000f0000ffffL, 0xffdf02000000e000L, 0xffffffffffffffffL, 0x9fffffffffffffffL
};
static final long[] jjbitVec68 = {
   0x87fffffe03ff0010L, 0xffffffe007fffffeL, 0x7fffffffffffffffL, 0xe0000631cfcfcfcL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 981;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 884:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 885;
                  if (curChar == 32)
                     jjAddStates(0, 1);
                  if (curChar == 32)
                     jjAddStates(2, 4);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(5, 18);
                  else if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(800, 836);
                  else if (curChar == 33)
                     jjCheckNAddStates(19, 21);
                  else if (curChar == 61)
                     jjCheckNAddStates(22, 24);
                  else if (curChar == 36)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAddStates(25, 32);
                  }
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(528, 533);
                  else if (curChar == 47)
                     jjAddStates(33, 35);
                  else if (curChar == 34)
                     jjCheckNAddStates(36, 39);
                  else if (curChar == 39)
                     jjAddStates(40, 42);
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                     jjCheckNAddStates(43, 47);
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 66)
                        kind = 66;
                     jjCheckNAddStates(48, 59);
                  }
                  else if (curChar == 62)
                     jjCheckNAddTwoStates(844, 845);
                  else if (curChar == 60)
                     jjCheckNAddTwoStates(844, 845);
                  break;
               case 883:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 884;
                  if (curChar == 61)
                     jjCheckNAdd(836);
                  if (curChar == 61)
                     jjCheckNAdd(800);
                  break;
               case 982:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(60, 63);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAddStates(64, 66);
                  }
                  break;
               case 983:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(728, 729);
                  else if (curChar == 32)
                     jjAddStates(67, 68);
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(697, 698);
                  else if (curChar == 32)
                     jjAddStates(69, 75);
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     jjCheckNAdd(696);
                  }
                  else if (curChar == 32)
                     jjAddStates(76, 83);
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(579, 580);
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(578);
                  }
                  break;
               case 847:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 848;
                  if (curChar == 32)
                     jjAddStates(0, 1);
                  if (curChar == 32)
                     jjAddStates(2, 4);
                  break;
               case 984:
                  if (curChar == 32)
                     jjAddStates(0, 1);
                  if (curChar == 32)
                     jjAddStates(2, 4);
                  break;
               case 846:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 847;
                  if (curChar == 61)
                     jjCheckNAdd(836);
                  if (curChar == 61)
                     jjCheckNAdd(800);
                  break;
               case 981:
                  if (curChar == 32)
                     jjAddStates(0, 1);
                  else if (curChar == 61)
                     jjCheckNAdd(836);
                  if (curChar == 32)
                     jjAddStates(2, 4);
                  else if (curChar == 61)
                     jjCheckNAdd(800);
                  break;
               case 259:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 269;
                  else if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 265;
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 1:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 2:
                  if (curChar == 39 && kind > 75)
                     kind = 75;
                  break;
               case 4:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 5:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(6, 2);
                  break;
               case 6:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 7:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 8:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 15:
                  if (curChar == 34)
                     jjCheckNAddStates(36, 39);
                  break;
               case 16:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 18:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 25:
                  if (curChar == 34 && kind > 76)
                     kind = 76;
                  break;
               case 26:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(84, 88);
                  break;
               case 27:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 28:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(27);
                  break;
               case 30:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 32:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 32)
                     jjAddStates(89, 96);
                  break;
               case 34:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAdd(35);
                  break;
               case 35:
                  if (curChar == 32)
                     jjAddStates(97, 99);
                  break;
               case 36:
                  if (curChar == 46)
                     jjCheckNAdd(37);
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddStates(100, 102);
                  break;
               case 39:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(40);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(103, 109);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(110, 112);
                  break;
               case 45:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(46, 41);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(47, 48);
                  break;
               case 49:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(50);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(50, 41);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 52:
                  if (curChar != 46)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddStates(113, 115);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddStates(113, 115);
                  break;
               case 55:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(56);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(56, 41);
                  break;
               case 57:
                  if (curChar == 48)
                     jjAddStates(116, 117);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(118, 119);
                  break;
               case 60:
                  if (curChar == 46)
                     jjCheckNAdd(61);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(61, 62);
                  break;
               case 63:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(64);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(64, 41);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(120, 122);
                  break;
               case 67:
                  if (curChar == 46)
                     jjCheckNAdd(68);
                  break;
               case 69:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(70);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(70, 41);
                  break;
               case 71:
                  if (curChar == 61)
                     jjCheckNAdd(35);
                  break;
               case 72:
                  if (curChar == 61)
                     jjCheckNAdd(71);
                  break;
               case 73:
                  if (curChar == 60)
                     jjCheckNAdd(71);
                  break;
               case 74:
                  if (curChar == 62)
                     jjCheckNAdd(71);
                  break;
               case 75:
                  if (curChar == 33)
                     jjCheckNAdd(71);
                  break;
               case 76:
                  if (curChar == 46)
                     jjCheckNAdd(77);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(123, 126);
                  break;
               case 79:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(127, 129);
                  break;
               case 82:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 83:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 84:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 85:
                  if (curChar == 32)
                     jjAddStates(130, 132);
                  break;
               case 86:
                  if (curChar == 46)
                     jjCheckNAdd(87);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddStates(133, 135);
                  break;
               case 89:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(90);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(90, 41);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(136, 142);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(143, 145);
                  break;
               case 94:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(95);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(95, 41);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(96, 97);
                  break;
               case 98:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(99);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(99, 41);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(100, 101);
                  break;
               case 101:
                  if (curChar != 46)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddStates(146, 148);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddStates(146, 148);
                  break;
               case 104:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(105);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(105, 41);
                  break;
               case 106:
                  if (curChar == 48)
                     jjAddStates(149, 150);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(151, 152);
                  break;
               case 109:
                  if (curChar == 46)
                     jjCheckNAdd(110);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(110, 111);
                  break;
               case 112:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(113);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(113, 41);
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(153, 155);
                  break;
               case 116:
                  if (curChar == 46)
                     jjCheckNAdd(117);
                  break;
               case 118:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(119);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(119, 41);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(156, 162);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(163, 165);
                  break;
               case 123:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(124);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 81);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  break;
               case 127:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(128);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(166, 168);
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(129, 130);
                  break;
               case 130:
                  if (curChar == 46)
                     jjCheckNAddStates(169, 172);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(169, 172);
                  break;
               case 133:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(134);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(173, 175);
                  break;
               case 135:
                  if (curChar == 48)
                     jjAddStates(176, 177);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(178, 179);
                  break;
               case 138:
                  if (curChar == 46)
                     jjCheckNAdd(139);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(139, 140);
                  break;
               case 141:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(142);
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(180, 182);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(183, 185);
                  break;
               case 145:
                  if (curChar == 46)
                     jjCheckNAdd(146);
                  break;
               case 147:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(148);
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(186, 188);
                  break;
               case 150:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 151:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 152:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 153:
                  if (curChar == 32)
                     jjAddStates(189, 195);
                  break;
               case 154:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAdd(155);
                  break;
               case 155:
                  if (curChar == 32)
                     jjAddStates(196, 197);
                  break;
               case 156:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(157);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(157);
                  break;
               case 158:
                  if (curChar != 48)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(159, 161);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 161:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(161);
                  break;
               case 162:
                  if (curChar == 61)
                     jjCheckNAdd(155);
                  break;
               case 163:
                  if (curChar == 61)
                     jjCheckNAdd(162);
                  break;
               case 164:
                  if (curChar == 60)
                     jjCheckNAdd(162);
                  break;
               case 165:
                  if (curChar == 62)
                     jjCheckNAdd(162);
                  break;
               case 166:
                  if (curChar == 33)
                     jjCheckNAdd(162);
                  break;
               case 167:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 169);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 169);
                  break;
               case 169:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 170:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 171:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 172:
                  if (curChar == 32)
                     jjAddStates(198, 199);
                  break;
               case 173:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(174);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(174);
                  break;
               case 175:
                  if (curChar != 48)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAddTwoStates(176, 178);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 178:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(178);
                  break;
               case 179:
                  if (curChar == 48)
                     jjCheckNAddStates(200, 202);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(181, 169);
                  break;
               case 182:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(182, 169);
                  break;
               case 184:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 185:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 186:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 187:
                  if (curChar == 32)
                     jjAddStates(203, 204);
                  break;
               case 188:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 189:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 191:
                  if (curChar == 39)
                     jjAddStates(205, 210);
                  break;
               case 192:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 193:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 194:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 196:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 197:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(198, 193);
                  break;
               case 198:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 199:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 200:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(198);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 207:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 208:
               case 243:
                  if (curChar == 39)
                     jjCheckNAdd(209);
                  break;
               case 211:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 212:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(213, 208);
                  break;
               case 213:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 214:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 215:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(213);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 222:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 223:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 224:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 226:
                  if (curChar == 39)
                     jjAddStates(211, 216);
                  break;
               case 227:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 228:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 229:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 231:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 232:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 228);
                  break;
               case 233:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 234:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 235:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(233);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 242:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 245:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 246:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(247, 243);
                  break;
               case 247:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 248:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 249:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(247);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 256:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 258:
                  if (curChar == 47)
                     jjAddStates(33, 35);
                  break;
               case 260:
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAddStates(217, 219);
                  break;
               case 261:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAddStates(217, 219);
                  break;
               case 262:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 263:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 264:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 266:
                  if ((0xffff7fffffffffffL & l) != 0L && kind > 7)
                     kind = 7;
                  break;
               case 267:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 268:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 270:
                  if (curChar == 32)
                     jjAddStates(220, 222);
                  break;
               case 271:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 272:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 273:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 274:
                  if (curChar == 32)
                     jjAddStates(223, 230);
                  break;
               case 275:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAdd(276);
                  break;
               case 276:
                  if (curChar == 32)
                     jjAddStates(231, 233);
                  break;
               case 277:
                  if (curChar == 46)
                     jjCheckNAdd(278);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(234, 238);
                  break;
               case 280:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(281);
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(239, 242);
                  break;
               case 283:
                  if ((0x2400L & l) != 0L && kind > 128)
                     kind = 128;
                  break;
               case 284:
                  if (curChar == 10 && kind > 128)
                     kind = 128;
                  break;
               case 285:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(243, 249);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(250, 252);
                  break;
               case 289:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(290);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(290, 282);
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  break;
               case 293:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(294);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(253, 256);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(295, 296);
                  break;
               case 296:
                  if (curChar == 46)
                     jjCheckNAddStates(257, 261);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(257, 261);
                  break;
               case 299:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(300);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(262, 265);
                  break;
               case 301:
                  if (curChar == 48)
                     jjAddStates(266, 267);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(268, 269);
                  break;
               case 304:
                  if (curChar == 46)
                     jjCheckNAdd(305);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(305, 306);
                  break;
               case 307:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(308);
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(270, 273);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(274, 276);
                  break;
               case 311:
                  if (curChar == 46)
                     jjCheckNAdd(312);
                  break;
               case 313:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(314);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(277, 280);
                  break;
               case 315:
                  if (curChar == 61)
                     jjCheckNAdd(276);
                  break;
               case 316:
                  if (curChar == 61)
                     jjCheckNAdd(315);
                  break;
               case 317:
                  if (curChar == 60)
                     jjCheckNAdd(315);
                  break;
               case 318:
                  if (curChar == 62)
                     jjCheckNAdd(315);
                  break;
               case 319:
                  if (curChar == 33)
                     jjCheckNAdd(315);
                  break;
               case 320:
                  if (curChar == 46)
                     jjCheckNAdd(321);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(281, 284);
                  break;
               case 323:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(324);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(285, 287);
                  break;
               case 326:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 327:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 328:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 329:
                  if (curChar == 32)
                     jjAddStates(288, 290);
                  break;
               case 330:
                  if (curChar == 46)
                     jjCheckNAdd(331);
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(291, 295);
                  break;
               case 333:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(334);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(296, 299);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(300, 306);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(307, 309);
                  break;
               case 338:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(339);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(339, 282);
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(340, 341);
                  break;
               case 342:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(343);
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(310, 313);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(344, 345);
                  break;
               case 345:
                  if (curChar == 46)
                     jjCheckNAddStates(314, 318);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(314, 318);
                  break;
               case 348:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(349);
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(319, 322);
                  break;
               case 350:
                  if (curChar == 48)
                     jjAddStates(323, 324);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(325, 326);
                  break;
               case 353:
                  if (curChar == 46)
                     jjCheckNAdd(354);
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(354, 355);
                  break;
               case 356:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(357);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(327, 330);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(331, 333);
                  break;
               case 360:
                  if (curChar == 46)
                     jjCheckNAdd(361);
                  break;
               case 362:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(363);
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(334, 337);
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(338, 344);
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(345, 347);
                  break;
               case 367:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(368);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(368, 325);
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(369, 370);
                  break;
               case 371:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(372);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(348, 350);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(373, 374);
                  break;
               case 374:
                  if (curChar == 46)
                     jjCheckNAddStates(351, 354);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(351, 354);
                  break;
               case 377:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(378);
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(355, 357);
                  break;
               case 379:
                  if (curChar == 48)
                     jjAddStates(358, 359);
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(360, 361);
                  break;
               case 382:
                  if (curChar == 46)
                     jjCheckNAdd(383);
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(383, 384);
                  break;
               case 385:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(386);
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(362, 364);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(365, 367);
                  break;
               case 389:
                  if (curChar == 46)
                     jjCheckNAdd(390);
                  break;
               case 391:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(392);
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(368, 370);
                  break;
               case 394:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 395:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 396:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 397:
                  if (curChar == 32)
                     jjAddStates(371, 377);
                  break;
               case 398:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAdd(399);
                  break;
               case 399:
                  if (curChar == 32)
                     jjAddStates(378, 379);
                  break;
               case 400:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(380, 382);
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(380, 382);
                  break;
               case 402:
                  if (curChar == 48)
                     jjCheckNAddStates(383, 386);
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(387, 389);
                  break;
               case 405:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(390, 392);
                  break;
               case 406:
                  if (curChar == 61)
                     jjCheckNAdd(399);
                  break;
               case 407:
                  if (curChar == 61)
                     jjCheckNAdd(406);
                  break;
               case 408:
                  if (curChar == 60)
                     jjCheckNAdd(406);
                  break;
               case 409:
                  if (curChar == 62)
                     jjCheckNAdd(406);
                  break;
               case 410:
                  if (curChar == 33)
                     jjCheckNAdd(406);
                  break;
               case 411:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(412, 413);
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(412, 413);
                  break;
               case 413:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 414:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 415:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 416:
                  if (curChar == 32)
                     jjAddStates(393, 394);
                  break;
               case 417:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(395, 397);
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(395, 397);
                  break;
               case 419:
                  if (curChar == 48)
                     jjCheckNAddStates(398, 401);
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(402, 404);
                  break;
               case 422:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(405, 407);
                  break;
               case 423:
                  if (curChar == 48)
                     jjCheckNAddStates(408, 410);
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(425, 413);
                  break;
               case 426:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(426, 413);
                  break;
               case 428:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 429:
                  if (curChar == 36)
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 430:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 431:
                  if (curChar == 32)
                     jjAddStates(411, 412);
                  break;
               case 432:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 433:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 435:
                  if (curChar == 39)
                     jjAddStates(413, 418);
                  break;
               case 436:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 437:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 438:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 440:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 441:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(442, 437);
                  break;
               case 442:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 443:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 444:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(442);
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 451:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 452:
               case 487:
                  if (curChar == 39)
                     jjCheckNAdd(453);
                  break;
               case 455:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 456:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(457, 452);
                  break;
               case 457:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 458:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 459:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(457);
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 466:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 467:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 468:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 470:
                  if (curChar == 39)
                     jjAddStates(419, 424);
                  break;
               case 471:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 472:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 473:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 475:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 476:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(477, 472);
                  break;
               case 477:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 478:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 479:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(477);
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 483:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 486:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 489:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 490:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(491, 487);
                  break;
               case 491:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 492:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 493:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(491);
                  break;
               case 495:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 500:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 511:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(43, 47);
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(513, 514);
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAdd(515);
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(516, 517);
                  break;
               case 517:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 518:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 519:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 520:
                  if (curChar == 32)
                     jjAddStates(425, 426);
                  break;
               case 521:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 136)
                     kind = 136;
                  jjCheckNAdd(522);
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 136)
                     kind = 136;
                  jjCheckNAdd(522);
                  break;
               case 523:
                  if (curChar != 48)
                     break;
                  if (kind > 136)
                     kind = 136;
                  jjCheckNAddTwoStates(524, 526);
                  break;
               case 525:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 136)
                     kind = 136;
                  jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 526:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 136)
                     kind = 136;
                  jjCheckNAdd(526);
                  break;
               case 527:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(528, 533);
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(64, 66);
                  break;
               case 530:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(531);
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(531, 532);
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(60, 63);
                  break;
               case 535:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(536);
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(427, 429);
                  break;
               case 538:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 539:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 541:
                  if (curChar == 32)
                     jjAddStates(430, 432);
                  break;
               case 542:
                  if (curChar == 46)
                     jjCheckNAdd(543);
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddStates(433, 435);
                  break;
               case 545:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(546);
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddTwoStates(546, 547);
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(436, 442);
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(443, 445);
                  break;
               case 551:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(552);
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(552, 547);
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(553, 554);
                  break;
               case 555:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(556);
                  break;
               case 556:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddTwoStates(556, 547);
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(557, 558);
                  break;
               case 558:
                  if (curChar != 46)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddStates(446, 448);
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddStates(446, 448);
                  break;
               case 561:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(562);
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddTwoStates(562, 547);
                  break;
               case 563:
                  if (curChar == 48)
                     jjAddStates(449, 450);
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(451, 452);
                  break;
               case 566:
                  if (curChar == 46)
                     jjCheckNAdd(567);
                  break;
               case 567:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(567, 568);
                  break;
               case 569:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(570);
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddTwoStates(570, 547);
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(453, 455);
                  break;
               case 573:
                  if (curChar == 46)
                     jjCheckNAdd(574);
                  break;
               case 575:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(576);
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 133)
                     kind = 133;
                  jjCheckNAddTwoStates(576, 547);
                  break;
               case 577:
                  if (curChar != 36)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAddStates(25, 32);
                  break;
               case 578:
                  if ((0x3ff00100fffc1ffL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(578);
                  break;
               case 579:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(579, 580);
                  break;
               case 580:
                  if (curChar == 32)
                     jjAddStates(76, 83);
                  break;
               case 581:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAdd(582);
                  break;
               case 582:
                  if (curChar == 32)
                     jjAddStates(456, 458);
                  break;
               case 583:
                  if (curChar == 46)
                     jjCheckNAdd(584);
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddStates(459, 461);
                  break;
               case 586:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(587);
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(587, 588);
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(462, 468);
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(469, 471);
                  break;
               case 592:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(593);
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(593, 588);
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(594, 595);
                  break;
               case 596:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(597);
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(597, 588);
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(598, 599);
                  break;
               case 599:
                  if (curChar != 46)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddStates(472, 474);
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddStates(472, 474);
                  break;
               case 602:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(603);
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(603, 588);
                  break;
               case 604:
                  if (curChar == 48)
                     jjAddStates(475, 476);
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(477, 478);
                  break;
               case 607:
                  if (curChar == 46)
                     jjCheckNAdd(608);
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(608, 609);
                  break;
               case 610:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(611);
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(611, 588);
                  break;
               case 613:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(479, 481);
                  break;
               case 614:
                  if (curChar == 46)
                     jjCheckNAdd(615);
                  break;
               case 616:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(617);
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(617, 588);
                  break;
               case 618:
                  if (curChar == 61)
                     jjCheckNAdd(582);
                  break;
               case 619:
                  if (curChar == 61)
                     jjCheckNAdd(618);
                  break;
               case 620:
                  if (curChar == 60)
                     jjCheckNAdd(618);
                  break;
               case 621:
                  if (curChar == 62)
                     jjCheckNAdd(618);
                  break;
               case 622:
                  if (curChar == 33)
                     jjCheckNAdd(618);
                  break;
               case 623:
                  if (curChar == 46)
                     jjCheckNAdd(624);
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(482, 485);
                  break;
               case 626:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(627);
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(486, 488);
                  break;
               case 629:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 630:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 631:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 632:
                  if (curChar == 32)
                     jjAddStates(489, 491);
                  break;
               case 633:
                  if (curChar == 46)
                     jjCheckNAdd(634);
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddStates(492, 494);
                  break;
               case 636:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(637);
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(637, 588);
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(495, 501);
                  break;
               case 639:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(502, 504);
                  break;
               case 641:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(642);
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(642, 588);
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(643, 644);
                  break;
               case 645:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(646);
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(646, 588);
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(647, 648);
                  break;
               case 648:
                  if (curChar != 46)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddStates(505, 507);
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddStates(505, 507);
                  break;
               case 651:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(652);
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(652, 588);
                  break;
               case 653:
                  if (curChar == 48)
                     jjAddStates(508, 509);
                  break;
               case 655:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(510, 511);
                  break;
               case 656:
                  if (curChar == 46)
                     jjCheckNAdd(657);
                  break;
               case 657:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(657, 658);
                  break;
               case 659:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(660);
                  break;
               case 660:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(660, 588);
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(512, 514);
                  break;
               case 663:
                  if (curChar == 46)
                     jjCheckNAdd(664);
                  break;
               case 665:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(666);
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 130)
                     kind = 130;
                  jjCheckNAddTwoStates(666, 588);
                  break;
               case 667:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(515, 521);
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(522, 524);
                  break;
               case 670:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(671);
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(671, 628);
                  break;
               case 672:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(672, 673);
                  break;
               case 674:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(675);
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(525, 527);
                  break;
               case 676:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(676, 677);
                  break;
               case 677:
                  if (curChar == 46)
                     jjCheckNAddStates(528, 531);
                  break;
               case 678:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(528, 531);
                  break;
               case 680:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(681);
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(532, 534);
                  break;
               case 682:
                  if (curChar == 48)
                     jjAddStates(535, 536);
                  break;
               case 684:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(537, 538);
                  break;
               case 685:
                  if (curChar == 46)
                     jjCheckNAdd(686);
                  break;
               case 686:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(686, 687);
                  break;
               case 688:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(689);
                  break;
               case 689:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(539, 541);
                  break;
               case 691:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(542, 544);
                  break;
               case 692:
                  if (curChar == 46)
                     jjCheckNAdd(693);
                  break;
               case 694:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(695);
                  break;
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(545, 547);
                  break;
               case 696:
                  if ((0x3ff00100fffc1ffL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(696);
                  break;
               case 697:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(697, 698);
                  break;
               case 698:
                  if (curChar == 32)
                     jjAddStates(69, 75);
                  break;
               case 699:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAdd(700);
                  break;
               case 700:
                  if (curChar == 32)
                     jjAddStates(548, 549);
                  break;
               case 701:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(702);
                  break;
               case 702:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(702);
                  break;
               case 703:
                  if (curChar != 48)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAddTwoStates(704, 706);
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 706:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(706);
                  break;
               case 707:
                  if (curChar == 61)
                     jjCheckNAdd(700);
                  break;
               case 708:
                  if (curChar == 61)
                     jjCheckNAdd(707);
                  break;
               case 709:
                  if (curChar == 60)
                     jjCheckNAdd(707);
                  break;
               case 710:
                  if (curChar == 62)
                     jjCheckNAdd(707);
                  break;
               case 711:
                  if (curChar == 33)
                     jjCheckNAdd(707);
                  break;
               case 712:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(713, 714);
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(713, 714);
                  break;
               case 714:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 715;
                  break;
               case 715:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 716;
                  break;
               case 716:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 717:
                  if (curChar == 32)
                     jjAddStates(550, 551);
                  break;
               case 718:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(719);
                  break;
               case 719:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(719);
                  break;
               case 720:
                  if (curChar != 48)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAddTwoStates(721, 723);
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 723:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(723);
                  break;
               case 724:
                  if (curChar == 48)
                     jjCheckNAddStates(552, 554);
                  break;
               case 726:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(726, 714);
                  break;
               case 727:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(727, 714);
                  break;
               case 728:
                  if ((0x3ff00100fffc1ffL & l) != 0L)
                     jjCheckNAddTwoStates(728, 729);
                  break;
               case 729:
                  if (curChar == 32)
                     jjAddStates(67, 68);
                  break;
               case 730:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 731:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 733:
                  if (curChar == 39)
                     jjAddStates(555, 560);
                  break;
               case 734:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 735:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 736:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 738:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 739:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(740, 735);
                  break;
               case 740:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 741:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 742:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(740);
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 745:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 746:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 747:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 749:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 750:
               case 785:
                  if (curChar == 39)
                     jjCheckNAdd(751);
                  break;
               case 753:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 754:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(755, 750);
                  break;
               case 755:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 756:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 757:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(755);
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 761;
                  break;
               case 761:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 764:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 765:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 766:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 767;
                  break;
               case 768:
                  if (curChar == 39)
                     jjAddStates(561, 566);
                  break;
               case 769:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 770:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 771;
                  break;
               case 771:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 773:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 774:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(775, 770);
                  break;
               case 775:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 776:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 777:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(775);
                  break;
               case 779:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 782:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 784:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 787:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 788:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(789, 785);
                  break;
               case 789:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 790:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 791:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(789);
                  break;
               case 793:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 794:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 795:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 796:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 798:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 799:
                  if ((0x5000000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(800, 836);
                  break;
               case 800:
                  if (curChar == 32)
                     jjAddStates(2, 4);
                  break;
               case 801:
                  if (curChar == 46)
                     jjCheckNAdd(802);
                  break;
               case 802:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddStates(567, 569);
                  break;
               case 804:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(805);
                  break;
               case 805:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddTwoStates(805, 806);
                  break;
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(570, 576);
                  break;
               case 808:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(577, 579);
                  break;
               case 810:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(811);
                  break;
               case 811:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(811, 806);
                  break;
               case 812:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(812, 813);
                  break;
               case 814:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(815);
                  break;
               case 815:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddTwoStates(815, 806);
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(816, 817);
                  break;
               case 817:
                  if (curChar != 46)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddStates(580, 582);
                  break;
               case 818:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddStates(580, 582);
                  break;
               case 820:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(821);
                  break;
               case 821:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddTwoStates(821, 806);
                  break;
               case 822:
                  if (curChar == 48)
                     jjAddStates(583, 584);
                  break;
               case 824:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(585, 586);
                  break;
               case 825:
                  if (curChar == 46)
                     jjCheckNAdd(826);
                  break;
               case 826:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(826, 827);
                  break;
               case 828:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(829);
                  break;
               case 829:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddTwoStates(829, 806);
                  break;
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(587, 589);
                  break;
               case 832:
                  if (curChar == 46)
                     jjCheckNAdd(833);
                  break;
               case 834:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(835);
                  break;
               case 835:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  jjCheckNAddTwoStates(835, 806);
                  break;
               case 836:
                  if (curChar == 32)
                     jjAddStates(0, 1);
                  break;
               case 837:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjCheckNAdd(838);
                  break;
               case 838:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjCheckNAdd(838);
                  break;
               case 839:
                  if (curChar != 48)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjCheckNAddTwoStates(840, 842);
                  break;
               case 841:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjstateSet[jjnewStateCnt++] = 841;
                  break;
               case 842:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjCheckNAdd(842);
                  break;
               case 843:
                  if (curChar == 61)
                     jjCheckNAddStates(22, 24);
                  break;
               case 844:
                  if (curChar == 61)
                     jjCheckNAdd(800);
                  break;
               case 845:
                  if (curChar == 61)
                     jjCheckNAdd(836);
                  break;
               case 849:
                  if (curChar == 39)
                     jjAddStates(590, 595);
                  break;
               case 850:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 851:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 852;
                  break;
               case 852:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 849;
                  break;
               case 854:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 855:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(856, 851);
                  break;
               case 856:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 857:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 858;
                  break;
               case 858:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(856);
                  break;
               case 860:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 861;
                  break;
               case 861:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 862;
                  break;
               case 862:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 863;
                  break;
               case 863:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 865:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 866:
               case 903:
                  if (curChar == 39)
                     jjCheckNAdd(867);
                  break;
               case 869:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 870:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(871, 866);
                  break;
               case 871:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 872:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 873;
                  break;
               case 873:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(871);
                  break;
               case 875:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 876;
                  break;
               case 876:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 877;
                  break;
               case 877:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 878;
                  break;
               case 878:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 880:
                  if (curChar == 60)
                     jjCheckNAddTwoStates(844, 845);
                  break;
               case 881:
                  if (curChar == 62)
                     jjCheckNAddTwoStates(844, 845);
                  break;
               case 882:
                  if (curChar == 33)
                     jjCheckNAddStates(19, 21);
                  break;
               case 886:
                  if (curChar == 39)
                     jjAddStates(596, 601);
                  break;
               case 887:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 888:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 889;
                  break;
               case 889:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 886;
                  break;
               case 891:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 892:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(893, 888);
                  break;
               case 893:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 894:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 895;
                  break;
               case 895:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(893);
                  break;
               case 897:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 898;
                  break;
               case 898:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 899;
                  break;
               case 899:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 900;
                  break;
               case 900:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 902:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 905:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 906:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(907, 903);
                  break;
               case 907:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 908:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 909;
                  break;
               case 909:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(907);
                  break;
               case 911:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 912;
                  break;
               case 912:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 913;
                  break;
               case 913:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 914;
                  break;
               case 914:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 916:
                  if (curChar != 48)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(48, 59);
                  break;
               case 918:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(918, 514);
                  break;
               case 919:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(919, 514);
                  break;
               case 921:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjstateSet[jjnewStateCnt++] = 921;
                  break;
               case 922:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAdd(922);
                  break;
               case 924:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(602, 603);
                  break;
               case 925:
                  if (curChar == 46)
                     jjCheckNAdd(926);
                  break;
               case 926:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(926, 927);
                  break;
               case 928:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(929);
                  break;
               case 929:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(929, 532);
                  break;
               case 931:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(604, 606);
                  break;
               case 932:
                  if (curChar == 46)
                     jjCheckNAdd(933);
                  break;
               case 934:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(935);
                  break;
               case 935:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(935, 532);
                  break;
               case 937:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(607, 608);
                  break;
               case 938:
                  if (curChar == 46)
                     jjCheckNAdd(939);
                  break;
               case 939:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(939, 940);
                  break;
               case 941:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(942);
                  break;
               case 942:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(609, 611);
                  break;
               case 944:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(612, 614);
                  break;
               case 945:
                  if (curChar == 46)
                     jjCheckNAdd(946);
                  break;
               case 947:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(948);
                  break;
               case 948:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(615, 617);
                  break;
               case 950:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(950, 517);
                  break;
               case 951:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(951, 517);
                  break;
               case 952:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(5, 18);
                  break;
               case 953:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(618, 620);
                  break;
               case 955:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(956);
                  break;
               case 956:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(956, 532);
                  break;
               case 957:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(957, 958);
                  break;
               case 959:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(960);
                  break;
               case 960:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(960, 532);
                  break;
               case 961:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(961, 962);
                  break;
               case 962:
                  if (curChar != 46)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(621, 623);
                  break;
               case 963:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(621, 623);
                  break;
               case 965:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(966);
                  break;
               case 966:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(966, 532);
                  break;
               case 967:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(624, 626);
                  break;
               case 969:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(970);
                  break;
               case 970:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(970, 537);
                  break;
               case 971:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(971, 972);
                  break;
               case 973:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(974);
                  break;
               case 974:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(627, 629);
                  break;
               case 975:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(975, 976);
                  break;
               case 976:
                  if (curChar == 46)
                     jjCheckNAddStates(630, 633);
                  break;
               case 977:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(630, 633);
                  break;
               case 979:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(980);
                  break;
               case 980:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(634, 636);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAddStates(25, 32);
                  }
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 184;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 150;
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 983:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(728, 729);
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(697, 698);
                  if ((0x87fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     jjCheckNAdd(696);
                  }
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(579, 580);
                  if ((0x87fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(578);
                  }
                  break;
               case 1:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 92)
                     jjAddStates(637, 639);
                  break;
               case 4:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 9:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 14:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 16:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 17:
                  if (curChar == 92)
                     jjAddStates(640, 642);
                  break;
               case 18:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 19:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 24:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 31:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 32:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 38:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(643, 644);
                  break;
               case 41:
                  if ((0x5000000050L & l) != 0L && kind > 129)
                     kind = 129;
                  break;
               case 44:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(645, 646);
                  break;
               case 48:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(647, 648);
                  break;
               case 54:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(649, 650);
                  break;
               case 58:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 61:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(651, 652);
                  break;
               case 62:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(653, 654);
                  break;
               case 65:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(66);
                  break;
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(120, 122);
                  break;
               case 68:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(655, 656);
                  break;
               case 78:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(657, 658);
                  break;
               case 81:
                  if ((0x5000000050L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 88:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(659, 660);
                  break;
               case 93:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(661, 662);
                  break;
               case 97:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(663, 664);
                  break;
               case 103:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(665, 666);
                  break;
               case 107:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(108, 109);
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(108, 109);
                  break;
               case 110:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(667, 668);
                  break;
               case 111:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(669, 670);
                  break;
               case 114:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(115);
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(153, 155);
                  break;
               case 117:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(671, 672);
                  break;
               case 122:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(673, 674);
                  break;
               case 126:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(675, 676);
                  break;
               case 132:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(677, 678);
                  break;
               case 136:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(137, 138);
                  break;
               case 137:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(137, 138);
                  break;
               case 139:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(679, 680);
                  break;
               case 140:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(681, 682);
                  break;
               case 143:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(144);
                  break;
               case 144:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(183, 185);
                  break;
               case 146:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(683, 684);
                  break;
               case 149:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 151:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 152:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 159:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(160);
                  break;
               case 160:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(160);
                  break;
               case 176:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(177);
                  break;
               case 177:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(177);
                  break;
               case 180:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(181);
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(181, 169);
                  break;
               case 183:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 185:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 186:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 190:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 192:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 195:
                  if (curChar == 92)
                     jjAddStates(685, 687);
                  break;
               case 196:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 201:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(193);
                  break;
               case 206:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 207:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 209:
                  if (curChar == 93 && kind > 129)
                     kind = 129;
                  break;
               case 210:
                  if (curChar == 92)
                     jjAddStates(688, 690);
                  break;
               case 211:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 216:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 219:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 220:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(208);
                  break;
               case 221:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 225:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 227:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 230:
                  if (curChar == 92)
                     jjAddStates(691, 693);
                  break;
               case 231:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 236:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(228);
                  break;
               case 241:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 242:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 244:
                  if (curChar == 92)
                     jjAddStates(694, 696);
                  break;
               case 245:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 250:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(243);
                  break;
               case 255:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 257:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 260:
                  if ((0xfffffffffffffffeL & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAddStates(217, 219);
                  break;
               case 261:
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAddStates(217, 219);
                  break;
               case 266:
                  if (kind > 7)
                     kind = 7;
                  break;
               case 269:
                  if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 272:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 273:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 279:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(697, 698);
                  break;
               case 282:
                  if ((0x5000000050L & l) != 0L)
                     jjCheckNAddTwoStates(283, 285);
                  break;
               case 288:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(699, 700);
                  break;
               case 292:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(701, 702);
                  break;
               case 298:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(703, 704);
                  break;
               case 302:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 305:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(705, 706);
                  break;
               case 306:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(707, 708);
                  break;
               case 309:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(310);
                  break;
               case 310:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(274, 276);
                  break;
               case 312:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(709, 710);
                  break;
               case 322:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(711, 712);
                  break;
               case 325:
                  if ((0x5000000050L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 332:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(713, 714);
                  break;
               case 337:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(715, 716);
                  break;
               case 341:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(717, 718);
                  break;
               case 347:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(719, 720);
                  break;
               case 351:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(352, 353);
                  break;
               case 352:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(352, 353);
                  break;
               case 354:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(721, 722);
                  break;
               case 355:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(723, 724);
                  break;
               case 358:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(359);
                  break;
               case 359:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(331, 333);
                  break;
               case 361:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(725, 726);
                  break;
               case 366:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(727, 728);
                  break;
               case 370:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(729, 730);
                  break;
               case 376:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(731, 732);
                  break;
               case 380:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(381, 382);
                  break;
               case 381:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(381, 382);
                  break;
               case 383:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(733, 734);
                  break;
               case 384:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(735, 736);
                  break;
               case 387:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(388);
                  break;
               case 388:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(365, 367);
                  break;
               case 390:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(737, 738);
                  break;
               case 393:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 395:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 396:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 403:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(404);
                  break;
               case 404:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(387, 389);
                  break;
               case 420:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(421);
                  break;
               case 421:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(402, 404);
                  break;
               case 424:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(425);
                  break;
               case 425:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(425, 413);
                  break;
               case 427:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 429:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 430:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 434:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 436:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 439:
                  if (curChar == 92)
                     jjAddStates(739, 741);
                  break;
               case 440:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 445:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 446:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 447:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 448:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 449:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(437);
                  break;
               case 450:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 451:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 453:
                  if (curChar == 93)
                     jjCheckNAddTwoStates(283, 285);
                  break;
               case 454:
                  if (curChar == 92)
                     jjAddStates(742, 744);
                  break;
               case 455:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 460:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 461:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 462:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 463:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 464:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(452);
                  break;
               case 465:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 469:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 471:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 474:
                  if (curChar == 92)
                     jjAddStates(745, 747);
                  break;
               case 475:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 480:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 481:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 482:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 483:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 484:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(472);
                  break;
               case 485:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 486:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 488:
                  if (curChar == 92)
                     jjAddStates(748, 750);
                  break;
               case 489:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 494:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 495:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 496:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 497:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 498:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(487);
                  break;
               case 499:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 501:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 502:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 503:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 507:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 508:
                  if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 509:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 510:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 514:
                  if ((0x100000001000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 524:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(525);
                  break;
               case 525:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 136)
                     kind = 136;
                  jjCheckNAdd(525);
                  break;
               case 529:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(751, 752);
                  break;
               case 532:
                  if ((0x5000000050L & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 534:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(753, 754);
                  break;
               case 537:
                  if ((0x5000000050L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 544:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(755, 756);
                  break;
               case 547:
                  if ((0x5000000050L & l) != 0L && kind > 133)
                     kind = 133;
                  break;
               case 550:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(757, 758);
                  break;
               case 554:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(759, 760);
                  break;
               case 560:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(761, 762);
                  break;
               case 564:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(565, 566);
                  break;
               case 565:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(565, 566);
                  break;
               case 567:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(763, 764);
                  break;
               case 568:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(765, 766);
                  break;
               case 571:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(572);
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(453, 455);
                  break;
               case 574:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(767, 768);
                  break;
               case 577:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAddStates(25, 32);
                  break;
               case 578:
                  if ((0x87fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(578);
                  break;
               case 579:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(579, 580);
                  break;
               case 585:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(769, 770);
                  break;
               case 588:
                  if ((0x5000000050L & l) != 0L && kind > 130)
                     kind = 130;
                  break;
               case 591:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(771, 772);
                  break;
               case 595:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(773, 774);
                  break;
               case 601:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(775, 776);
                  break;
               case 605:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(606, 607);
                  break;
               case 606:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(606, 607);
                  break;
               case 608:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(777, 778);
                  break;
               case 609:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(779, 780);
                  break;
               case 612:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(613);
                  break;
               case 613:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(479, 481);
                  break;
               case 615:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(781, 782);
                  break;
               case 625:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(783, 784);
                  break;
               case 628:
                  if ((0x5000000050L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 635:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(785, 786);
                  break;
               case 640:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(787, 788);
                  break;
               case 644:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(789, 790);
                  break;
               case 650:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(791, 792);
                  break;
               case 654:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(655, 656);
                  break;
               case 655:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(655, 656);
                  break;
               case 657:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(793, 794);
                  break;
               case 658:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(795, 796);
                  break;
               case 661:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(662);
                  break;
               case 662:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(512, 514);
                  break;
               case 664:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(797, 798);
                  break;
               case 669:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(799, 800);
                  break;
               case 673:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(801, 802);
                  break;
               case 679:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(803, 804);
                  break;
               case 683:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(684, 685);
                  break;
               case 684:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(684, 685);
                  break;
               case 686:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(805, 806);
                  break;
               case 687:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(807, 808);
                  break;
               case 690:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(691);
                  break;
               case 691:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(542, 544);
                  break;
               case 693:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(809, 810);
                  break;
               case 696:
                  if ((0x87fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(696);
                  break;
               case 697:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(697, 698);
                  break;
               case 704:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(705);
                  break;
               case 705:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(705);
                  break;
               case 721:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(722);
                  break;
               case 722:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjCheckNAdd(722);
                  break;
               case 725:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(726);
                  break;
               case 726:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(726, 714);
                  break;
               case 728:
                  if ((0x87fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(728, 729);
                  break;
               case 732:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 734:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 737:
                  if (curChar == 92)
                     jjAddStates(811, 813);
                  break;
               case 738:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 743:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 744;
                  break;
               case 744:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 745:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 746:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 747:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(735);
                  break;
               case 748:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 749:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 751:
                  if (curChar == 93 && kind > 137)
                     kind = 137;
                  break;
               case 752:
                  if (curChar == 92)
                     jjAddStates(814, 816);
                  break;
               case 753:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 758:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 759:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 760:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 761;
                  break;
               case 761:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 762:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(750);
                  break;
               case 763:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 758;
                  break;
               case 767:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 769:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 772:
                  if (curChar == 92)
                     jjAddStates(817, 819);
                  break;
               case 773:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 778:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 779:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 780:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 781:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 782:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(770);
                  break;
               case 783:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 784:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 786:
                  if (curChar == 92)
                     jjAddStates(820, 822);
                  break;
               case 787:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 792:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 793:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 794:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 795:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 796:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(785);
                  break;
               case 797:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 803:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(823, 824);
                  break;
               case 806:
                  if ((0x5000000050L & l) != 0L && kind > 132)
                     kind = 132;
                  break;
               case 809:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(825, 826);
                  break;
               case 813:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(827, 828);
                  break;
               case 819:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(829, 830);
                  break;
               case 823:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(824, 825);
                  break;
               case 824:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(824, 825);
                  break;
               case 826:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(831, 832);
                  break;
               case 827:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(833, 834);
                  break;
               case 830:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(831);
                  break;
               case 831:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(587, 589);
                  break;
               case 833:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(835, 836);
                  break;
               case 840:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(841);
                  break;
               case 841:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjCheckNAdd(841);
                  break;
               case 848:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 849;
                  break;
               case 850:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 853:
                  if (curChar == 92)
                     jjAddStates(837, 839);
                  break;
               case 854:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 859:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 860;
                  break;
               case 860:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 861;
                  break;
               case 861:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 862;
                  break;
               case 862:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 863;
                  break;
               case 863:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(851);
                  break;
               case 864:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 859;
                  break;
               case 865:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 867:
                  if (curChar == 93 && kind > 138)
                     kind = 138;
                  break;
               case 868:
                  if (curChar == 92)
                     jjAddStates(840, 842);
                  break;
               case 869:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 874:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 875;
                  break;
               case 875:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 876;
                  break;
               case 876:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 877;
                  break;
               case 877:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 878;
                  break;
               case 878:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(866);
                  break;
               case 879:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 874;
                  break;
               case 885:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 886;
                  break;
               case 887:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 890:
                  if (curChar == 92)
                     jjAddStates(843, 845);
                  break;
               case 891:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 896:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 897;
                  break;
               case 897:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 898;
                  break;
               case 898:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 899;
                  break;
               case 899:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 900;
                  break;
               case 900:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(888);
                  break;
               case 901:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 896;
                  break;
               case 902:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 904:
                  if (curChar == 92)
                     jjAddStates(846, 848);
                  break;
               case 905:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 910:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 911;
                  break;
               case 911:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 912;
                  break;
               case 912:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 913;
                  break;
               case 913:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 914;
                  break;
               case 914:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(903);
                  break;
               case 915:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 910;
                  break;
               case 917:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(918);
                  break;
               case 918:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(918, 514);
                  break;
               case 920:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(921);
                  break;
               case 921:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAdd(921);
                  break;
               case 923:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(924, 925);
                  break;
               case 924:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(924, 925);
                  break;
               case 926:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(849, 850);
                  break;
               case 927:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(851, 852);
                  break;
               case 930:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(931);
                  break;
               case 931:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(604, 606);
                  break;
               case 933:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(853, 854);
                  break;
               case 936:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(937, 938);
                  break;
               case 937:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(937, 938);
                  break;
               case 939:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(855, 856);
                  break;
               case 940:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(857, 858);
                  break;
               case 943:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(944);
                  break;
               case 944:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(612, 614);
                  break;
               case 946:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(859, 860);
                  break;
               case 949:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(950);
                  break;
               case 950:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(950, 517);
                  break;
               case 954:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(861, 862);
                  break;
               case 958:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(863, 864);
                  break;
               case 964:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(865, 866);
                  break;
               case 968:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(867, 868);
                  break;
               case 972:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(869, 870);
                  break;
               case 978:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(871, 872);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAddStates(25, 32);
                  break;
               case 983:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(578);
                  }
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(579, 580);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 131)
                        kind = 131;
                     jjCheckNAdd(696);
                  }
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(697, 698);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(728, 729);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(36, 39);
                  break;
               case 31:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 32:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 151:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 152:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 185:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 186:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 192:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 207:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 227:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 242:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 260:
               case 261:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAddStates(217, 219);
                  break;
               case 266:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 7)
                     kind = 7;
                  break;
               case 272:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 273:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 395:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 396:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 429:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 430:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 436:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 451:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 471:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 486:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 578:
                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(578);
                  break;
               case 579:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(579, 580);
                  break;
               case 696:
                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(696);
                  break;
               case 697:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(697, 698);
                  break;
               case 728:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(728, 729);
                  break;
               case 734:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 749:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 750;
                  break;
               case 769:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 770;
                  break;
               case 784:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 850:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 851;
                  break;
               case 865:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 866;
                  break;
               case 887:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 888;
                  break;
               case 902:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjstateSet[jjnewStateCnt++] = 903;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 981 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(0x400L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         break;
      default :
         return 2;
   }
   return 2;
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x200L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   837, 839, 801, 807, 822, 953, 954, 532, 957, 958, 961, 962, 967, 968, 537, 971, 
   972, 975, 976, 844, 845, 883, 844, 845, 846, 578, 579, 580, 696, 697, 698, 728, 
   729, 259, 267, 268, 16, 17, 24, 25, 1, 3, 14, 513, 514, 515, 516, 517, 
   917, 919, 514, 920, 922, 923, 930, 936, 943, 949, 951, 517, 533, 534, 537, 538, 
   528, 529, 532, 764, 798, 699, 708, 709, 710, 711, 712, 724, 581, 619, 620, 621, 
   622, 623, 667, 682, 16, 17, 27, 24, 25, 34, 72, 73, 74, 75, 76, 120, 
   135, 36, 42, 57, 37, 38, 41, 43, 44, 41, 47, 48, 51, 52, 43, 44, 
   41, 53, 54, 41, 58, 65, 59, 60, 66, 67, 68, 77, 78, 81, 82, 80, 
   81, 82, 86, 91, 106, 87, 88, 41, 92, 93, 41, 96, 97, 100, 101, 92, 
   93, 41, 102, 103, 41, 107, 114, 108, 109, 115, 116, 117, 121, 122, 81, 125, 
   126, 129, 130, 121, 122, 81, 128, 81, 82, 131, 132, 81, 82, 134, 81, 82, 
   136, 143, 137, 138, 142, 81, 82, 144, 145, 146, 148, 81, 82, 154, 163, 164, 
   165, 166, 167, 179, 156, 158, 173, 175, 180, 182, 169, 222, 256, 192, 195, 206, 
   207, 210, 221, 227, 230, 241, 242, 244, 255, 261, 262, 264, 393, 427, 501, 275, 
   316, 317, 318, 319, 320, 364, 379, 277, 286, 301, 278, 279, 282, 283, 285, 281, 
   282, 283, 285, 287, 288, 282, 291, 292, 295, 296, 287, 288, 282, 294, 282, 283, 
   285, 297, 298, 282, 283, 285, 300, 282, 283, 285, 302, 309, 303, 304, 308, 282, 
   283, 285, 310, 311, 312, 314, 282, 283, 285, 321, 322, 325, 326, 324, 325, 326, 
   330, 335, 350, 331, 332, 282, 283, 285, 334, 282, 283, 285, 336, 337, 282, 340, 
   341, 344, 345, 336, 337, 282, 343, 282, 283, 285, 346, 347, 282, 283, 285, 349, 
   282, 283, 285, 351, 358, 352, 353, 357, 282, 283, 285, 359, 360, 361, 363, 282, 
   283, 285, 365, 366, 325, 369, 370, 373, 374, 365, 366, 325, 372, 325, 326, 375, 
   376, 325, 326, 378, 325, 326, 380, 387, 381, 382, 386, 325, 326, 388, 389, 390, 
   392, 325, 326, 398, 407, 408, 409, 410, 411, 423, 400, 402, 401, 283, 285, 403, 
   405, 283, 285, 404, 283, 285, 405, 283, 285, 417, 419, 418, 283, 285, 420, 422, 
   283, 285, 421, 283, 285, 422, 283, 285, 424, 426, 413, 466, 500, 436, 439, 450, 
   451, 454, 465, 471, 474, 485, 486, 488, 499, 521, 523, 536, 537, 538, 542, 548, 
   563, 543, 544, 547, 549, 550, 547, 553, 554, 557, 558, 549, 550, 547, 559, 560, 
   547, 564, 571, 565, 566, 572, 573, 574, 583, 589, 604, 584, 585, 588, 590, 591, 
   588, 594, 595, 598, 599, 590, 591, 588, 600, 601, 588, 605, 612, 606, 607, 613, 
   614, 615, 624, 625, 628, 629, 627, 628, 629, 633, 638, 653, 634, 635, 588, 639, 
   640, 588, 643, 644, 647, 648, 639, 640, 588, 649, 650, 588, 654, 661, 655, 656, 
   662, 663, 664, 668, 669, 628, 672, 673, 676, 677, 668, 669, 628, 675, 628, 629, 
   678, 679, 628, 629, 681, 628, 629, 683, 690, 684, 685, 689, 628, 629, 691, 692, 
   693, 695, 628, 629, 701, 703, 718, 720, 725, 727, 714, 734, 737, 748, 749, 752, 
   763, 769, 772, 783, 784, 786, 797, 802, 803, 806, 808, 809, 806, 812, 813, 816, 
   817, 808, 809, 806, 818, 819, 806, 823, 830, 824, 825, 831, 832, 833, 850, 853, 
   864, 865, 868, 879, 887, 890, 901, 902, 904, 915, 924, 925, 931, 932, 933, 937, 
   938, 942, 537, 538, 944, 945, 946, 948, 537, 538, 953, 954, 532, 963, 964, 532, 
   967, 968, 537, 974, 537, 538, 977, 978, 537, 538, 980, 537, 538, 4, 5, 7, 
   18, 26, 28, 39, 40, 45, 46, 49, 50, 55, 56, 61, 62, 63, 64, 69, 
   70, 79, 80, 89, 90, 94, 95, 98, 99, 104, 105, 110, 111, 112, 113, 118, 
   119, 123, 124, 127, 128, 133, 134, 139, 140, 141, 142, 147, 148, 196, 197, 199, 
   211, 212, 214, 231, 232, 234, 245, 246, 248, 280, 281, 289, 290, 293, 294, 299, 
   300, 305, 306, 307, 308, 313, 314, 323, 324, 333, 334, 338, 339, 342, 343, 348, 
   349, 354, 355, 356, 357, 362, 363, 367, 368, 371, 372, 377, 378, 383, 384, 385, 
   386, 391, 392, 440, 441, 443, 455, 456, 458, 475, 476, 478, 489, 490, 492, 530, 
   531, 535, 536, 545, 546, 551, 552, 555, 556, 561, 562, 567, 568, 569, 570, 575, 
   576, 586, 587, 592, 593, 596, 597, 602, 603, 608, 609, 610, 611, 616, 617, 626, 
   627, 636, 637, 641, 642, 645, 646, 651, 652, 657, 658, 659, 660, 665, 666, 670, 
   671, 674, 675, 680, 681, 686, 687, 688, 689, 694, 695, 738, 739, 741, 753, 754, 
   756, 773, 774, 776, 787, 788, 790, 804, 805, 810, 811, 814, 815, 820, 821, 826, 
   827, 828, 829, 834, 835, 854, 855, 857, 869, 870, 872, 891, 892, 894, 905, 906, 
   908, 926, 927, 928, 929, 934, 935, 939, 940, 941, 942, 947, 948, 955, 956, 959, 
   960, 965, 966, 969, 970, 973, 974, 979, 980, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec7[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec8[i2] & l2) != 0L);
      case 6:
         return ((jjbitVec9[i2] & l2) != 0L);
      case 7:
         return ((jjbitVec10[i2] & l2) != 0L);
      case 9:
         return ((jjbitVec11[i2] & l2) != 0L);
      case 10:
         return ((jjbitVec12[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec13[i2] & l2) != 0L);
      case 12:
         return ((jjbitVec14[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec15[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec16[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec17[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 17:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 18:
         return ((jjbitVec20[i2] & l2) != 0L);
      case 19:
         return ((jjbitVec21[i2] & l2) != 0L);
      case 20:
         return ((jjbitVec0[i2] & l2) != 0L);
      case 22:
         return ((jjbitVec22[i2] & l2) != 0L);
      case 23:
         return ((jjbitVec23[i2] & l2) != 0L);
      case 24:
         return ((jjbitVec24[i2] & l2) != 0L);
      case 25:
         return ((jjbitVec25[i2] & l2) != 0L);
      case 29:
         return ((jjbitVec26[i2] & l2) != 0L);
      case 30:
         return ((jjbitVec27[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec28[i2] & l2) != 0L);
      case 32:
         return ((jjbitVec29[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec30[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec31[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec32[i2] & l2) != 0L);
      case 77:
         return ((jjbitVec33[i2] & l2) != 0L);
      case 159:
         return ((jjbitVec34[i2] & l2) != 0L);
      case 164:
         return ((jjbitVec35[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec36[i2] & l2) != 0L);
      case 216:
         return ((jjbitVec37[i2] & l2) != 0L);
      case 250:
         return ((jjbitVec38[i2] & l2) != 0L);
      case 251:
         return ((jjbitVec39[i2] & l2) != 0L);
      case 253:
         return ((jjbitVec40[i2] & l2) != 0L);
      case 254:
         return ((jjbitVec41[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec42[i2] & l2) != 0L);
      default :
         if ((jjbitVec3[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec43[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec44[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec45[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec46[i2] & l2) != 0L);
      case 6:
         return ((jjbitVec47[i2] & l2) != 0L);
      case 7:
         return ((jjbitVec48[i2] & l2) != 0L);
      case 9:
         return ((jjbitVec49[i2] & l2) != 0L);
      case 10:
         return ((jjbitVec50[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec51[i2] & l2) != 0L);
      case 12:
         return ((jjbitVec52[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec53[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec54[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec55[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec56[i2] & l2) != 0L);
      case 17:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 18:
         return ((jjbitVec20[i2] & l2) != 0L);
      case 19:
         return ((jjbitVec57[i2] & l2) != 0L);
      case 20:
         return ((jjbitVec0[i2] & l2) != 0L);
      case 22:
         return ((jjbitVec22[i2] & l2) != 0L);
      case 23:
         return ((jjbitVec58[i2] & l2) != 0L);
      case 24:
         return ((jjbitVec59[i2] & l2) != 0L);
      case 25:
         return ((jjbitVec60[i2] & l2) != 0L);
      case 29:
         return ((jjbitVec26[i2] & l2) != 0L);
      case 30:
         return ((jjbitVec27[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec28[i2] & l2) != 0L);
      case 32:
         return ((jjbitVec61[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec30[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec62[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec32[i2] & l2) != 0L);
      case 77:
         return ((jjbitVec33[i2] & l2) != 0L);
      case 159:
         return ((jjbitVec34[i2] & l2) != 0L);
      case 164:
         return ((jjbitVec35[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec36[i2] & l2) != 0L);
      case 216:
         return ((jjbitVec63[i2] & l2) != 0L);
      case 220:
         return ((jjbitVec64[i2] & l2) != 0L);
      case 221:
         return ((jjbitVec65[i2] & l2) != 0L);
      case 250:
         return ((jjbitVec38[i2] & l2) != 0L);
      case 251:
         return ((jjbitVec66[i2] & l2) != 0L);
      case 253:
         return ((jjbitVec40[i2] & l2) != 0L);
      case 254:
         return ((jjbitVec67[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec68[i2] & l2) != 0L);
      default :
         if ((jjbitVec3[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, 
"\141\142\163\164\162\141\143\164", "\141\163\163\145\162\164", "\142\157\157\154\145\141\156", 
"\142\162\145\141\153", "\142\171\164\145", "\143\141\163\145", "\143\141\164\143\150", 
"\143\150\141\162", "\143\154\141\163\163", "\143\157\156\163\164", 
"\143\157\156\164\151\156\165\145", "\144\145\146\141\165\154\164", "\144\157", "\144\157\165\142\154\145", 
"\145\154\163\145", "\145\156\165\155", "\145\170\164\145\156\144\163", "\146\141\154\163\145", 
"\146\151\156\141\154", "\146\151\156\141\154\154\171", "\146\154\157\141\164", "\146\157\162", 
"\147\157\164\157", "\151\146", "\151\155\160\154\145\155\145\156\164\163", 
"\151\155\160\157\162\164", "\151\156\163\164\141\156\143\145\157\146", "\151\156\164", 
"\151\156\164\145\162\146\141\143\145", "\154\157\156\147", "\156\141\164\151\166\145", "\156\145\167", 
"\156\165\154\154", "\160\141\143\153\141\147\145", "\160\162\151\166\141\164\145", 
"\160\162\157\164\145\143\164\145\144", "\160\165\142\154\151\143", "\162\145\164\165\162\156", 
"\163\150\157\162\164", "\163\164\141\164\151\143", "\163\164\162\151\143\164\146\160", 
"\163\165\160\145\162", "\163\167\151\164\143\150", 
"\163\171\156\143\150\162\157\156\151\172\145\144", "\164\150\151\163", "\164\150\162\157\167", "\164\150\162\157\167\163", 
"\164\162\141\156\163\151\145\156\164", "\164\162\165\145", "\164\162\171", "\166\157\151\144", 
"\166\157\154\141\164\151\154\145", "\167\150\151\154\145", null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\50", "\51", "\173", "\175", "\133", "\135", 
"\73", "\54", "\56", "\100", "\75", "\74", "\41", "\176", "\77", "\72", "\75\75", 
"\74\75", "\76\75", "\41\75", "\174\174", "\46\46", "\53\53", "\55\55", "\53", "\55", 
"\52", "\57", "\46", "\174", "\136", "\45", "\74\74", "\53\75", "\55\75", "\52\75", 
"\57\75", "\46\75", "\174\75", "\136\75", "\45\75", "\74\74\75", "\76\76\75", 
"\76\76\76\75", "\56\56\56", "\76\76\76", "\76\76", "\76", null, null, null, null, null, null, 
null, null, null, null, null, "\32", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_JAVA_DOC_COMMENT",
   "IN_MULTI_LINE_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, 1, 2, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffff001L, 0xffffffffffff3847L, 0xffeL, 
};
static final long[] jjtoSkip = {
   0x67eL, 0x0L, 0x1L, 
};
static final long[] jjtoSpecial = {
   0x640L, 0x0L, 0x1L, 
};
static final long[] jjtoMore = {
   0x980L, 0x0L, 0x0L, 
};
protected JavaCharStream input_stream;
private final int[] jjrounds = new int[981];
private final int[] jjstateSet = new int[1962];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public ASTParserTokenManager(JavaCharStream stream){
   if (JavaCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public ASTParserTokenManager(JavaCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 981; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = ASTParser.GTToken.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      CommonTokenAction(matchedToken);
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 11)
         {
            jjmatchedKind = 11;
         }
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 11)
         {
            jjmatchedKind = 11;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           CommonTokenAction(matchedToken);
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 7 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                   input_stream.backup(1);
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 125 :
        image.append(jjstrLiteralImages[125]);
        lengthOfMatch = jjstrLiteralImages[125].length();
     matchedToken.kind = GT;
     ((ASTParser.GTToken)matchedToken).realKind = RUNSIGNEDSHIFT;
     input_stream.backup(2);
         break;
      case 126 :
        image.append(jjstrLiteralImages[126]);
        lengthOfMatch = jjstrLiteralImages[126].length();
     matchedToken.kind = GT;
     ((ASTParser.GTToken)matchedToken).realKind = RSIGNEDSHIFT;
     input_stream.backup(1);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
